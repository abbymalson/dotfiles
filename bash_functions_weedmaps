# vim: ft=sh


function helpWeedmaps() {
  tee <<EOF
$(printf "${FORMATTING_HEADER_1}Weedmaps Help${COLOR_NC}")
$(printf "%s" ${FORMATTING_BIG_DIVIDER})
$(printf "${FORMATTING_HEADER_2}Commands${COLOR_NC}")
$(printf "${FORMATTING_COMMAND}helpWeedmapsGenerateReportCards ionic|core${COLOR_NC}")
$(printf "${FORMATTING_COMMAND}helpWeedmapsReleaseNotesGenProcess ionic|core${COLOR_NC}")
$(printf "${FORMATTING_COMMAND}helpWeedmapsCoreReleaseProcess${COLOR_NC}")
$(printf "${FORMATTING_COMMAND}helpWeedmapsIonicReleaseProcess${COLOR_NC}")
$(printf "${FORMATTING_COMMAND}helpWeedmapsRinseAndRepeat${COLOR_NC}")
$(printf "${FORMATTING_COMMAND}helpWeedmapsUpdateVersions${COLOR_NC}")
$(printf "${FORMATTING_COMMAND}helpWeedmapsCreateOpsTicket${COLOR_NC}")
$(printf "%s" ${FORMATTING_SMALL_DIVIDER})
$(printf "${FORMATTING_HEADER_2}Daily Things to do${COLOR_NC}")
0800: $(printf "${FORMATTING_COMMAND}helpWeedmapsRinseAndRepeat${COLOR_NC}")
1200: $(printf "${FORMATTING_COMMAND}helpWeedmapsRinseAndRepeat${COLOR_NC}")
1600: $(printf "${FORMATTING_COMMAND}helpWeedmapsRinseAndRepeat${COLOR_NC}")
$(printf "%s" ${FORMATTING_SMALL_DIVIDER})
$(printf "${FORMATTING_HEADER_2}Websites${COLOR_NC}")
$(printf "${FORMATTING_LINK}https://circleci.com/gh/GhostGroup${COLOR_NC}")
If shit blows up ... Call/Text Jared - $(printf "${FORMATTING_PHONE}720.725.6801${COLOR_NC}")
EOF
}

function helpWeedmapsCreateOpsTicket() {
  tee <<EOF
$(printf "${FORMATTING_HEADER_1}Weedmaps Help${COLOR_NC}")
$(printf "%s" ${FORMATTING_BIG_DIVIDER})
EOF
  color_heading_section "Creating tickets for Ops"


  color_dividing_section
  color_note_section "In Slack (#bot) channel"
  color_command_section "@towelie create OPS issue test, test, Configuration, kkacsh"
  color_command_section "@towelie create OPS issue Off Board user, Off board Bryan Clark BryanEdC, Provisioning,  vchaplytska"

  #color_note_section < 
  tee <<EOF
this is a test of what I can do with this.
boop $(printf "${COLOR_RED}boop${COLOR_NC}")
$(printf "${COLOR_GREEN}beep ${COLOR_PURPLE}boop${COLOR_NC}")
beep boop
in case I wanted to go into more
detail and have more spacing just how I want it
this text can go on and on
EOF
  
}

function helpWeedmapsDatabaseRestore() {
  color_heading_section "-- Restore breaks the environment!!! --"
  color_heading_section "-- Type this into the bot flow --"
  color_command_section "@towelie database restore env=acceptance"
  color_heading_section "-- You should see something along the lines of: --"
  color_note_section "Towelie--"
  color_note_section "@Jared: Database restore requested for 'acceptance' \(21985\). Log output can be viewed at https://ansible.weedmaps.com/api/log/wofDGgMpai2ooGCpeogNio1EZfrAmHIv"
  color_heading_section "-- Then type this into the bot flow --"
  color_command_section "@Towelie, jenkins build Migrate ElasticSearch, env=acceptance&action=restore"
  color_heading_section "-- You should see something like the things below: --"
  color_note_section "Towelie--"
  color_note_section "@Jared: \(201\) Build started for Migrate%20ElasticSearch http://jenkins.weedmaps.com/job/Migrate ElasticSearch"
  color_note_section "Towelie:--"
  color_note_section "@Jared Restoration of the latest sanitized production database to 'acceptance' was successful. Log output from the job is available at https://ansible.weedmaps.com/api/log/wofDGgMpai2ooGCpeogNio1EZfrAmHIv"
  color_heading_section "-- then rebuild core weedmaps --"
  color_command_section "git checkout acceptance; git fetch; git pull; git push origin acceptance:acceptance;"
  color_heading_section "-- Go to CircleCI and Bot Flow to watch the process to make sure the environment is up --"
  color_divding_section 
  color_heading_section "== Data base refreshing =="
  color_note_section "these can be run at same time"
  color_heading_section "for Core:"
  color_command_section "@towelie database restore env=staging"
  color_heading_section "for ES:"
  color_command_section "@Towelie, jenkins build Migrate ElasticSearch, env=staging&action=restore"
  tee <<EOF
EOF
}

function helpWeedmapsMoonshotRelease() {
    tee <<EOF
EOF
  color_heading_section "Moonshot"
  color_dividing_section
  color_note_section "Moonshot follows the standard ref:spec git flow"
  color_command_section "git push origin develop:acceptance"
  color_note_section "there are no other environments currently"
  color_note_section "we have just taken over these duties, more notes to come"
}

function helpWeedmapsMmjmenuRelease() {
    tee <<EOF
EOF
  color_heading_section "MMJMenu"
  color_dividing_section
  color_note_section "MMJMenu follows the standard ref:spec git flow"
  color_command_section "git push origin develop:acceptance"
  color_dividing_section
  color_note_section "When pushing things to environments, you will need to log into Engine yard"
  color_note_section "Engine yard"
  color_hyperlink_section "https://cloud.engineyard.com"
  color_note_section "There are deploy"
  color_dividing_section
  color_heading_section "Failures"
  color_dividing_section
  color_heading_section "RuntimeError: Resque Workers Working!!"
  color_note_section "It means that things are still working, give it 5 more minutes and try again."
  color_note_section "If it fails again, you have to SSH into the box"
  color_note_section "Look for resque 'ps aux | grep 'resque'"
  color_note_section "Grab, type of job, pid - pass to Brad"
}

function helpWeedmapsIonicReleaseProcess() {
    tee <<EOF
EOF
  color_command_section "git branch -r"
  if [ "acceptance" = "$1" ]; then 
    tee <<EOF
EOF
    color_heading_section "-- Updating the Acceptance Environment --"
    color_note_section "-- don't forget to update performance environment when you update acceptance --"
    color_command_section "git checkout develop; git fetch; git pull;"
    color_command_section "git reset [SHA of commit for acceptance]"
    color_command_section "git push origin develop:accceptance"
    color_heading_section "-- Updating the Performance Environment --"
    color_note_section "Whenever we update the acceptance environment, we also update the performance environment"
  elif [ "staging" = "$1" ]; then
    tee <<EOF
EOF
    color_heading_section "-- Staging Release --"
        color_command_section "git push origin develop:release/${Ionic_CurrentProductionReleaseNumber}"
        color_heading_section "-- Go to Circle and look for your build's progress --"
    
    color_hyperlink_section "https://circleci.com/gh/GhostGroup/weedmaps_ionic/tree/release%2F${Ionic_CurrentProductionReleaseNumber}"
    color_note_section "-- In the meantime research! --"
    color_note_section "because we're paranoid, we want to verify a few things"
    color_command_section "git show-ref develop"
    color_command_section "git show-ref release/${Ionic_CurrentProductionReleaseNumber}"
    color_heading_section "-- Once your build successfully completes in Circle --"
    color_note_section "-- Push things to staging --"
    color_command_section "git checkout release/${Ionic_CurrentProductionReleaseNumber}"
    color_command_section "git push origin release/${Ionic_CurrentProductionReleaseNumber}:staging"
    color_heading_section  "-- Go to circle, check progress --"
    color_hyperlink_section "https://circleci.com/gh/GhostGroup/weedmaps_ionic/tree/staging"
    color_heading_section "-- Generate the release notes (Type Output) --"
    helpWeedmapsReleaseNotesGenProcess ionic
    color_note_section "helpWeedmapsReleaseNotesGenProcess ionic"
    color_heading_section "-- Clean it up --"
    color_note_section "Track down any unknown items"
    color_note_section "Post a draft of a tag on github, paste that info in"
    color_note_section "Notify Victoria - send her the type output in slac k- not github link - text"
    color_note_section "Notify Front End Flow"
    color_note_section "Notify Release Chat Room flow"
  elif [ "production" = "$1" ]; then
    tee <<EOF
EOF
    color_heading_section "-- Production Release --"
    # echo "Notify Ops Flow of an outgoing release"
    color_command_section "git checkout release/${Ionic_CurrentProductionReleaseNumber}"
    color_command_section "git pull; git fetch;"
    color_command_section "git push origin release/${Ionic_CurrentProductionReleaseNumber}:staging"
    color_heading_section "-- If the above does not work --"
    color_command_section "git push origin release/${Ionic_CurrentProductionReleaseNumber}:staging -f"
    color_note_section "Post the draft of the tag ${Ionic_CurrentProductionReleaseNumber} on github "
    color_note_section " and update it to point to the intranet's release notes link the tag info in"
    color_note_section "Notify Release Chat Room flow"
  else
    tee <<EOF
EOF
    color_heading_section "You were supposed to do something"
    color_command_section "helpWeedmapsRelease acceptance"
    color_command_section "performance"
    color_command_section "staging"
    color_command_section "production"
  fi
}

function helpWeedmapsUpdateVersions() {
    tee <<EOF
EOF
  color_note_section "this is something that should be build out ..."
  color_note_section "for now, update this file"
  color_command_section "vim ~/code/weedmaps_code/weedmaps-tools/versions.sh"
}

function helpWeedmapsGenerateReportCards() {
  [ -f "$HOME/code/weedmaps_code/weedmaps-tools/versions.sh" ] && . "$HOME/code/weedmaps_code/weedmaps-tools/versions.sh"
  if [ "ionic" = "$1" ]; then 
    tee <<EOF
$(printf "${FORMATTING_COMMAND}helpWeedmapsReleaseNotesGenProcess ionic${COLOR_NC}")
$(printf "${FORMATTING_HEADER_2}Post the following in the #chapter-frontend (slack channel):${COLOR_NC}")
@charliek, @rl, @thomas
These are the current outstanding items in Ionic:

### QA
### In Progress
EOF
    elif [ "core" = "$1" ]; then
$(printf "${FORMATTING_COMMAND}helpWeedmapsReleaseNotesGenProcess core${COLOR_NC}")
    tee <<EOF
$(printf "${FORMATTING_HEADER_2}Post the following in the #chapter-backend (slack channel):${COLOR_NC}")
@mikeo, @jck
These are the outstanding items in Core:

### In Progress
### QA
EOF
    else
    color_note_section "You were supposed to do something"
    tee <<EOF
helpWeedmapsGenerateReportCards ionic|core
EOF
  fi
}

function helpWeedmapsReleaseNotifications() {
  [ -f "$HOME/code/weedmaps_code/weedmaps-tools/versions.sh" ] && . "$HOME/code/weedmaps_code/weedmaps-tools/versions.sh"
    tee <<EOF
EOF
  color_heading_section "In ops flow:"
    color_dividing_section 
    if [ "ionic" = "$1" ]; then 
    tee <<EOF
EOF
    color_note_section "@team Ionic ${Ionic_CurrentProductionReleaseNumber} is going to production shortly."
      color_dividing_section
      color_note_section "in Release Chat Room Flow:"
      color_dividing_section 
      color_note_section "@Team for Ionic ${Ionic_CurrentProductionReleaseNumber} release to Prod."
      color_note_section "We have:"
      color_note_section "OPS Notified"
      color_note_section "We need:"
      color_note_section "QA sign off"
      color_note_section "Dev sign off @Thomas, @CharlieK"
      color_note_section "Product sign off @Thomas, @CharlieK"
    elif [ "core" = "$1" ]; then
    tee <<EOF
EOF
    color_note_section "@Team Core ${Core_CurrentProductionReleaseNumber} going to Production soon"
      color_dividing_section 
      color_note_section "in Release Chat Room Flow:"
      color_dividing_section 
      color_note_section "@Team for Core ${Core_CurrentProductionReleaseNumber} to production."
      color_note_section "We have:"
      color_note_section "OPS notified"
      color_note_section "We need:"
      color_note_section "QA sign off"
      color_note_section "Dev sign off"
      color_note_section "Product sign off"
    else
    tee <<EOF
EOF
    color_note_section "You were supposed to do something"
  fi
}

function gitReleaseNotesStatus() {
  #path='GhostGroup/weedmaps_ionic' 
  # $2 == github path
  if [ "$2" != "" ]
  then
    color_command_section "git releasenotes $1.. -a -p $2"
    releasenotes $1.. -a -p $2 | ~/code/dotfiles/bin/grcat ~/code/dotfiles/grc_conf_files/conf.weedmaps-git.releasenotes
  else
    color_command_section "git releasenotes $1.. -a"
    releasenotes $1.. -a | ~/code/dotfiles/bin/grcat ~/code/dotfiles/grc_conf_files/conf.weedmaps-git.releasenotes
  fi
}

#function gitReleaseNotesStatus() {
#  releasenotes $1.. -a | ~/code/dotfiles/bin/grcat ~/code/dotfiles/grc_conf_files/conf.releasenotes
#}

function helpWeedmapsRinseAndRepeat() {
    tee <<EOF
EOF
  color_note_section "Check boards \(Shatter, Flower Rangers, Tokemon, MMJMenu\)"
    color_command_section "git checkout \(staging|develop|acceptance\); git fetch; git pull"
    color_command_section "circle token 2afc0f73c64d2b6a57d5436bbecbff8e74d88f15"
    color_command_section "circle --watch"
    color_command_section "helpWeedmapsReleaseNotesGenProcess"
    color_note_section "Move things to Acceptance"
    color_note_section "Generate Report Cards"
  }

function helpCircleCliHelp() {
    tee <<EOF
EOF
  color_note_section "https://github.com/circle-cli/circle-cli"
        color_dividing_section 
    color_note_section "circle ci token"
        color_dividing_section 
    color_note_section "circle token 2afc0f73c64d2b6a57d5436bbecbff8e74d88f15"
        color_dividing_section 
    color_note_section "watch current branch"
        color_dividing_section 
    color_note_section "circle --watch "
        color_dividing_section 
    color_note_section "open current branch - current circle ci build"
        color_dividing_section 
    color_note_section "circle open"
  }

function helpWeedmapsReleaseNotesGenProcess() {

  [ -f "$HOME/code/weedmaps_code/weedmaps-tools/versions.sh" ] && . "$HOME/code/weedmaps_code/weedmaps-tools/versions.sh"
    tee <<EOF
EOF
    color_heading_section "Lengend"
        color_dividing_section 
      color_heading_section "Release Notes File # RNF"
      color_heading_section "Color Release Notes # CRN"
        color_dividing_section 
      if [ "ionic" = "$1" ]; then 
    tee <<EOF
EOF
      color_command_section "gitReleaseNotesStatus ${Ionic_PreviousProductionReleaseNumber} # CRN"
        color_dividing_section 
        color_heading_section "Generate Release Notes File"
        color_dividing_section 
        color_command_section "releasenotes ${Ionic_PreviousProductionReleaseNumber}.. -a  > ~/Documents/releases/ionic/ionic-${Ionic_CurrentProductionReleaseNumber}.txt"
        color_dividing_section 
        color_heading_section "Type output"
        color_dividing_section 
        color_command_section "releasenotes ${Ionic_PreviousProductionReleaseNumber}..  "
        color_dividing_section 
        color_note_section "Release notes should be generated "
      elif [ "core" = "$1" ]; then
    tee <<EOF
EOF
      color_command_section "gitReleaseNotesStatus origin/release/${Core_PreviousProductionReleaseNumber} GhostGroup/weedmaps"
        color_dividing_section 
        color_heading_section "Generate Release Notes File"
        color_dividing_section 
        color_command_section "releasenotes origin/release/${Core_PreviousProductionReleaseNumber}.. -a -p GhostGroup/weedmaps > ~/Documents/releases/core/core-${Core_CurrentProductionReleaseNumber}.txt"
        color_dividing_section 
        color_heading_section "Type output"
        color_dividing_section 
        color_command_section "releasenotes origin/release/${Core_PreviousProductionReleaseNumber}.. -p GhostGroup/weedmaps "
        color_dividing_section 
        color_note_section "Release notes should be generated "
      else
    tee <<EOF
EOF
      color_heading_section "You were supposed to do something"
        color_command_section "helpWeedmapsReleaseNotesGenProcess (ionic|core)"
      fi
}

function helpWeedmapsCoreReleaseProcess() {
    tee <<EOF
$(printf "${FORMATTING_LINK}https://github.com/GhostGroup/weedmaps/wiki/release-process${COLOR_NC}")
EOF
  color_command_section "git cherry-pick -m 1 -e [SHA-to-merge-in]"
  color_command_section "git cherry-pick -m 1 -e ${1}"
}

function helpWeedmapsCreatingHotfixes() {
    tee <<EOF
$(printf "${FORMATTING_COMMAND}git checkout
EOF
}
